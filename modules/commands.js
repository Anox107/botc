module.exports = async function(api, event, locked) {
  const { threadID, body } = event;

  const args = body.trim().split(" ");
  const cmd = args[0].toLowerCase();
  const text = args.slice(1).join(" ");

  switch (cmd) {
    case "grpname":
      if (!text) return api.sendMessage("тЪая╕П рдирдпрд╛ рдЧреНрд░реБрдк рдирд╛рдо рджреЛред", threadID);
      await api.setTitle(text, threadID);
      api.sendMessage("тЬЕ рдЧреНрд░реБрдк рдирд╛рдо рдмрджрд▓ рджрд┐рдпрд╛ рдЧрдпрд╛ред", threadID);
      break;

    case "nickall":
      if (!text) return api.sendMessage("тЪая╕П рдирдпрд╛ nickname рджреЛред", threadID);
      api.getThreadInfo(threadID, (err, info) => {
        if (err) return;
        info.participantIDs.forEach(id => {
          api.changeNickname(text, threadID, id);
        });
        api.sendMessage("тЬЕ рд╕рдмрдХреЗ nicknames рдмрджрд▓ рджрд┐рдП рдЧрдПред", threadID);
      });
      break;

    case "lockname":
      locked.groupname[threadID] = true;
      api.sendMessage("ЁЯФТ рдЧреНрд░реБрдк рдирд╛рдо рд▓реЙрдХ рд╣реЛ рдЪреБрдХрд╛ рд╣реИред", threadID);
      break;

    case "unlockname":
      delete locked.groupname[threadID];
      api.sendMessage("ЁЯФУ рдЧреНрд░реБрдк рдирд╛рдо рдЕрдирд▓реЙрдХ рдХрд┐рдпрд╛ рдЧрдпрд╛ред", threadID);
      break;

    case "locknick":
      locked.nicknames[threadID] = true;
      api.sendMessage("ЁЯФТ Nicknames рд▓реЙрдХ рд╣реЛ рдЪреБрдХреЗ рд╣реИрдВред", threadID);
      break;

    case "unlocknick":
      delete locked.nicknames[threadID];
      api.sendMessage("ЁЯФУ Nicknames рдЕрдирд▓реЙрдХ рд╣реЛ рдЪреБрдХреЗ рд╣реИрдВред", threadID);
      break;

    default:
      api.sendMessage("тЪая╕П рдЕрдЬреНрдЮрд╛рдд рдХрдорд╛рдВрдбред", threadID);
  }
};
